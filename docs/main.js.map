{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/core/condition/condition.component.ts","./src/app/core/core.module.ts","./src/app/core/current-conditions/current-conditions.component.ts","./src/app/core/interceptors/open-weather.interceptor.ts","./src/app/core/location.service.ts","./src/app/core/main-page/main-page.component.ts","./src/app/core/models/countries.model.ts","./src/app/core/reducers/location.actions.ts","./src/app/core/reducers/location.effects.ts","./src/app/core/reducers/location.feature.ts","./src/app/core/reducers/location.reducer.ts","./src/app/core/weather.service.ts","./src/app/core/zipcode-entry/zipcode-entry.component.ts","./src/app/forecasts-list/forecasts-list.component.ts","./src/app/shared/autocomplete/autocomplete.component.ts","./src/app/shared/highlight-matching-text.pipe.ts","./src/app/shared/submit-button/submit-button.component.ts","./src/app/shared/tokens/icon.token.ts","./src/app/shared/tokens/open-weather.token.ts","./src/app/shared/utils/button-status.util.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import {Component} from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {ForecastsListComponent} from './forecasts-list/forecasts-list.component';\nimport {routing} from './app.routing';\nimport {ServiceWorkerModule} from '@angular/service-worker';\nimport {environment} from '../environments/environment';\nimport {ICON_BASE_URL} from './shared/tokens/icon.token';\nimport {OPEN_WEATHER_MAP_APPID_KEY, OPEN_WEATHER_MAP_APPID_VALUE, OPEN_WEATHER_MAP_BASE_URL} from './shared/tokens/open-weather.token';\nimport {CoreModule} from './core/core.module';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {OpenWeatherInterceptor} from './core/interceptors/open-weather.interceptor';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {StoreModule} from '@ngrx/store';\nimport {EffectsModule} from '@ngrx/effects';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ForecastsListComponent\n    ],\n    imports: [\n        BrowserModule,\n        CoreModule,\n        routing,\n        ServiceWorkerModule.register('/ngsw-worker.js', {enabled: environment.production}),\n        StoreModule.forRoot({}, {}),\n        EffectsModule.forRoot([]),\n        StoreDevtoolsModule.instrument({maxAge: 25, logOnly: environment.production}),\n    ],\n    providers: [\n        {provide: OPEN_WEATHER_MAP_BASE_URL, useValue: environment.openWeatherMap.baseUrl},\n        {provide: OPEN_WEATHER_MAP_APPID_KEY, useValue: environment.openWeatherMap.appIdKey},\n        {provide: OPEN_WEATHER_MAP_APPID_VALUE, useValue: environment.openWeatherMap.appIdValue},\n        {provide: ICON_BASE_URL, useValue: environment.iconUrl},\n        {provide: HTTP_INTERCEPTORS, useClass: OpenWeatherInterceptor, multi: true},\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {ModuleWithProviders} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ForecastsListComponent} from './forecasts-list/forecasts-list.component';\nimport {MainPageComponent} from './core/main-page/main-page.component';\n\nconst appRoutes: Routes = [\n    {\n        path: '', component: MainPageComponent\n    },\n    {\n        path: 'forecast/:zipcode', component: ForecastsListComponent\n    }\n];\nexport const routing: ModuleWithProviders<any> = RouterModule.forRoot(appRoutes, {relativeLinkResolution: 'legacy'});\n","import {Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {LocationModel} from '../models/weather-conditions.model';\nimport {WeatherService} from '../weather.service';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-condition',\n    templateUrl: './condition.component.html',\n    styleUrls: ['./condition.component.css']\n})\nexport class ConditionComponent implements OnInit {\n\n    @Input()\n    location: LocationModel\n\n    @Output()\n    remove = new EventEmitter<string>();\n\n    /**\n     * This ViewChild's purpose is to distinguish clicks on the component\n     * (to navigate to the details page) from clicks on close button (which\n     * is contained inside the component).\n     */\n    @ViewChild('closeRef', {static: true})\n    closeEltRef: ElementRef<HTMLSpanElement>;\n\n    constructor(private weatherService: WeatherService, private router: Router) {\n    }\n\n    ngOnInit(): void {\n        if (!this.location) {\n            console.error('Location input should not be empty');\n        }\n    }\n\n    @HostListener('click', ['$event.target'])\n    showForecast(eventTarget: HTMLElement): void {\n        // Do not navigate to forecast route if the user clicked on close button.\n        if (!this.closeEltRef.nativeElement.contains(eventTarget)) {\n            this.router.navigate(['/forecast', this.location.zip]);\n        }\n    }\n\n    removeLocation(zipCode: string): void {\n        this.remove.emit(zipCode);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ZipcodeEntryComponent} from './zipcode-entry/zipcode-entry.component';\nimport {CurrentConditionsComponent} from './current-conditions/current-conditions.component';\nimport {MainPageComponent} from './main-page/main-page.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {RouterModule} from '@angular/router';\nimport {ConditionComponent} from './condition/condition.component';\nimport {StoreModule} from '@ngrx/store';\nimport {locationsFeature} from './reducers/location.feature';\nimport {EffectsModule} from '@ngrx/effects';\nimport {LocationEffects} from './reducers/location.effects';\nimport {AutocompleteComponent} from '../shared/autocomplete/autocomplete.component';\nimport {SubmitButtonComponent} from '../shared/submit-button/submit-button.component';\n\n@NgModule({\n    declarations: [\n        ZipcodeEntryComponent,\n        CurrentConditionsComponent,\n        MainPageComponent,\n        ConditionComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        RouterModule,\n        AutocompleteComponent,\n        SubmitButtonComponent,\n        StoreModule.forFeature(locationsFeature),\n        EffectsModule.forFeature([LocationEffects])\n    ],\n    exports: [\n        MainPageComponent\n    ]\n})\nexport class CoreModule {\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {LocationModel} from '../models/weather-conditions.model';\n\n@Component({\n    selector: 'app-current-conditions',\n    templateUrl: './current-conditions.component.html',\n    styleUrls: ['./current-conditions.component.css']\n})\nexport class CurrentConditionsComponent {\n\n    @Input()\n    locationModels: LocationModel[] = [];\n\n    @Output()\n    remove = new EventEmitter<string>();\n\n    constructor() {\n    }\n\n    removeLocation(zipCode: string): void {\n        this.remove.emit(zipCode);\n    }\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor, HttpParams\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {OPEN_WEATHER_MAP_APPID_KEY, OPEN_WEATHER_MAP_APPID_VALUE, OPEN_WEATHER_MAP_BASE_URL} from '../../shared/tokens/open-weather.token';\n\n@Injectable()\nexport class OpenWeatherInterceptor implements HttpInterceptor {\n\n  constructor(\n      @Inject(OPEN_WEATHER_MAP_BASE_URL) private baseUrl: string,\n      @Inject(OPEN_WEATHER_MAP_APPID_KEY) private appIdKey: string,\n      @Inject(OPEN_WEATHER_MAP_APPID_VALUE) private appIdValue: string\n  ) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const params = (request.params ?? new HttpParams())\n        .set(this.appIdKey, this.appIdValue);\n    const fullUrl = `${this.baseUrl}/${request.url}`;\n    const reqWithToken = request.clone({url: fullUrl, params});\n    return next.handle(reqWithToken);\n  }\n}\n","import {Injectable} from '@angular/core';\n\nexport const LOCATIONS = 'locations';\n\n@Injectable({providedIn: 'root'})\nexport class LocationService {\n\n    extractFromLocalStorage(): string[] {\n        const locString = localStorage.getItem(LOCATIONS);\n        let locations = [];\n        if (locString) {\n            try {\n                locations = JSON.parse(locString);\n            } catch (e) {\n                console.error(`An error ocurred while trying to unmarshal locations from local storage <${locString}>`, e);\n            }\n        }\n        return locations;\n    }\n\n    persistInLocalStorage(locations: string[]) {\n        localStorage.setItem(LOCATIONS, JSON.stringify(locations));\n    }\n\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {interval, Observable, Subject} from 'rxjs';\nimport {LocationModel} from '../models/weather-conditions.model';\nimport {takeUntil, tap} from 'rxjs/operators';\nimport {Store} from '@ngrx/store';\nimport {locationsFeature} from '../reducers/location.feature';\nimport {refreshLocations, removeLocation} from '../reducers/location.actions';\n\n@Component({\n    selector: 'app-main-page',\n    templateUrl: './main-page.component.html'\n})\nexport class MainPageComponent implements OnInit, OnDestroy {\n\n    locationState$: Observable<{ locations: string[]; locationModels: LocationModel[] }>;\n    private destroy$ = new Subject<void>();\n\n    constructor(private store: Store) {\n        this.locationState$ = this.store.select(locationsFeature.selectLocationsState);\n    }\n\n    ngOnInit(): void {\n        // When the component loads, start the \"reload\" process.\n        interval(30000).pipe(\n            tap(() => this.store.dispatch(refreshLocations())),\n            takeUntil(this.destroy$.asObservable())\n        ).subscribe();\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n    }\n\n    removeLocation(zipcode: string) {\n        this.store.dispatch(removeLocation({zipcode}));\n    }\n}\n","export interface AutocompleteOption {\n    name: string;\n    code: string;\n}\n\nexport const COUNTRIES: AutocompleteOption[] = [\n    {name: 'Afghanistan', code: 'AF'},\n    {name: 'Åland Islands', code: 'AX'},\n    {name: 'Albania', code: 'AL'},\n    {name: 'Algeria', code: 'DZ'},\n    {name: 'American Samoa', code: 'AS'},\n    {name: 'AndorrA', code: 'AD'},\n    {name: 'Angola', code: 'AO'},\n    {name: 'Anguilla', code: 'AI'},\n    {name: 'Antarctica', code: 'AQ'},\n    {name: 'Antigua and Barbuda', code: 'AG'},\n    {name: 'Argentina', code: 'AR'},\n    {name: 'Armenia', code: 'AM'},\n    {name: 'Aruba', code: 'AW'},\n    {name: 'Australia', code: 'AU'},\n    {name: 'Austria', code: 'AT'},\n    {name: 'Azerbaijan', code: 'AZ'},\n    {name: 'Bahamas', code: 'BS'},\n    {name: 'Bahrain', code: 'BH'},\n    {name: 'Bangladesh', code: 'BD'},\n    {name: 'Barbados', code: 'BB'},\n    {name: 'Belarus', code: 'BY'},\n    {name: 'Belgium', code: 'BE'},\n    {name: 'Belize', code: 'BZ'},\n    {name: 'Benin', code: 'BJ'},\n    {name: 'Bermuda', code: 'BM'},\n    {name: 'Bhutan', code: 'BT'},\n    {name: 'Bolivia', code: 'BO'},\n    {name: 'Bosnia and Herzegovina', code: 'BA'},\n    {name: 'Botswana', code: 'BW'},\n    {name: 'Bouvet Island', code: 'BV'},\n    {name: 'Brazil', code: 'BR'},\n    {name: 'British Indian Ocean Territory', code: 'IO'},\n    {name: 'Brunei Darussalam', code: 'BN'},\n    {name: 'Bulgaria', code: 'BG'},\n    {name: 'Burkina Faso', code: 'BF'},\n    {name: 'Burundi', code: 'BI'},\n    {name: 'Cambodia', code: 'KH'},\n    {name: 'Cameroon', code: 'CM'},\n    {name: 'Canada', code: 'CA'},\n    {name: 'Cape Verde', code: 'CV'},\n    {name: 'Cayman Islands', code: 'KY'},\n    {name: 'Central African Republic', code: 'CF'},\n    {name: 'Chad', code: 'TD'},\n    {name: 'Chile', code: 'CL'},\n    {name: 'China', code: 'CN'},\n    {name: 'Christmas Island', code: 'CX'},\n    {name: 'Cocos (Keeling) Islands', code: 'CC'},\n    {name: 'Colombia', code: 'CO'},\n    {name: 'Comoros', code: 'KM'},\n    {name: 'Congo', code: 'CG'},\n    {name: 'Congo, The Democratic Republic of the', code: 'CD'},\n    {name: 'Cook Islands', code: 'CK'},\n    {name: 'Costa Rica', code: 'CR'},\n    {name: 'Cote D\\'Ivoire', code: 'CI'},\n    {name: 'Croatia', code: 'HR'},\n    {name: 'Cuba', code: 'CU'},\n    {name: 'Cyprus', code: 'CY'},\n    {name: 'Czech Republic', code: 'CZ'},\n    {name: 'Denmark', code: 'DK'},\n    {name: 'Djibouti', code: 'DJ'},\n    {name: 'Dominica', code: 'DM'},\n    {name: 'Dominican Republic', code: 'DO'},\n    {name: 'Ecuador', code: 'EC'},\n    {name: 'Egypt', code: 'EG'},\n    {name: 'El Salvador', code: 'SV'},\n    {name: 'Equatorial Guinea', code: 'GQ'},\n    {name: 'Eritrea', code: 'ER'},\n    {name: 'Estonia', code: 'EE'},\n    {name: 'Ethiopia', code: 'ET'},\n    {name: 'Falkland Islands (Malvinas)', code: 'FK'},\n    {name: 'Faroe Islands', code: 'FO'},\n    {name: 'Fiji', code: 'FJ'},\n    {name: 'Finland', code: 'FI'},\n    {name: 'France', code: 'FR'},\n    {name: 'French Guiana', code: 'GF'},\n    {name: 'French Polynesia', code: 'PF'},\n    {name: 'French Southern Territories', code: 'TF'},\n    {name: 'Gabon', code: 'GA'},\n    {name: 'Gambia', code: 'GM'},\n    {name: 'Georgia', code: 'GE'},\n    {name: 'Germany', code: 'DE'},\n    {name: 'Ghana', code: 'GH'},\n    {name: 'Gibraltar', code: 'GI'},\n    {name: 'Greece', code: 'GR'},\n    {name: 'Greenland', code: 'GL'},\n    {name: 'Grenada', code: 'GD'},\n    {name: 'Guadeloupe', code: 'GP'},\n    {name: 'Guam', code: 'GU'},\n    {name: 'Guatemala', code: 'GT'},\n    {name: 'Guernsey', code: 'GG'},\n    {name: 'Guinea', code: 'GN'},\n    {name: 'Guinea-Bissau', code: 'GW'},\n    {name: 'Guyana', code: 'GY'},\n    {name: 'Haiti', code: 'HT'},\n    {name: 'Heard Island and Mcdonald Islands', code: 'HM'},\n    {name: 'Holy See (Vatican City State)', code: 'VA'},\n    {name: 'Honduras', code: 'HN'},\n    {name: 'Hong Kong', code: 'HK'},\n    {name: 'Hungary', code: 'HU'},\n    {name: 'Iceland', code: 'IS'},\n    {name: 'India', code: 'IN'},\n    {name: 'Indonesia', code: 'ID'},\n    {name: 'Iran, Islamic Republic Of', code: 'IR'},\n    {name: 'Iraq', code: 'IQ'},\n    {name: 'Ireland', code: 'IE'},\n    {name: 'Isle of Man', code: 'IM'},\n    {name: 'Israel', code: 'IL'},\n    {name: 'Italy', code: 'IT'},\n    {name: 'Jamaica', code: 'JM'},\n    {name: 'Japan', code: 'JP'},\n    {name: 'Jersey', code: 'JE'},\n    {name: 'Jordan', code: 'JO'},\n    {name: 'Kazakhstan', code: 'KZ'},\n    {name: 'Kenya', code: 'KE'},\n    {name: 'Kiribati', code: 'KI'},\n    {name: 'Korea, Democratic People\\'S Republic of', code: 'KP'},\n    {name: 'Korea, Republic of', code: 'KR'},\n    {name: 'Kuwait', code: 'KW'},\n    {name: 'Kyrgyzstan', code: 'KG'},\n    {name: 'Lao People\\'S Democratic Republic', code: 'LA'},\n    {name: 'Latvia', code: 'LV'},\n    {name: 'Lebanon', code: 'LB'},\n    {name: 'Lesotho', code: 'LS'},\n    {name: 'Liberia', code: 'LR'},\n    {name: 'Libyan Arab Jamahiriya', code: 'LY'},\n    {name: 'Liechtenstein', code: 'LI'},\n    {name: 'Lithuania', code: 'LT'},\n    {name: 'Luxembourg', code: 'LU'},\n    {name: 'Macao', code: 'MO'},\n    {name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK'},\n    {name: 'Madagascar', code: 'MG'},\n    {name: 'Malawi', code: 'MW'},\n    {name: 'Malaysia', code: 'MY'},\n    {name: 'Maldives', code: 'MV'},\n    {name: 'Mali', code: 'ML'},\n    {name: 'Malta', code: 'MT'},\n    {name: 'Marshall Islands', code: 'MH'},\n    {name: 'Martinique', code: 'MQ'},\n    {name: 'Mauritania', code: 'MR'},\n    {name: 'Mauritius', code: 'MU'},\n    {name: 'Mayotte', code: 'YT'},\n    {name: 'Mexico', code: 'MX'},\n    {name: 'Micronesia, Federated States of', code: 'FM'},\n    {name: 'Moldova, Republic of', code: 'MD'},\n    {name: 'Monaco', code: 'MC'},\n    {name: 'Mongolia', code: 'MN'},\n    {name: 'Montserrat', code: 'MS'},\n    {name: 'Morocco', code: 'MA'},\n    {name: 'Mozambique', code: 'MZ'},\n    {name: 'Myanmar', code: 'MM'},\n    {name: 'Namibia', code: 'NA'},\n    {name: 'Nauru', code: 'NR'},\n    {name: 'Nepal', code: 'NP'},\n    {name: 'Netherlands', code: 'NL'},\n    {name: 'Netherlands Antilles', code: 'AN'},\n    {name: 'New Caledonia', code: 'NC'},\n    {name: 'New Zealand', code: 'NZ'},\n    {name: 'Nicaragua', code: 'NI'},\n    {name: 'Niger', code: 'NE'},\n    {name: 'Nigeria', code: 'NG'},\n    {name: 'Niue', code: 'NU'},\n    {name: 'Norfolk Island', code: 'NF'},\n    {name: 'Northern Mariana Islands', code: 'MP'},\n    {name: 'Norway', code: 'NO'},\n    {name: 'Oman', code: 'OM'},\n    {name: 'Pakistan', code: 'PK'},\n    {name: 'Palau', code: 'PW'},\n    {name: 'Palestinian Territory, Occupied', code: 'PS'},\n    {name: 'Panama', code: 'PA'},\n    {name: 'Papua New Guinea', code: 'PG'},\n    {name: 'Paraguay', code: 'PY'},\n    {name: 'Peru', code: 'PE'},\n    {name: 'Philippines', code: 'PH'},\n    {name: 'Pitcairn', code: 'PN'},\n    {name: 'Poland', code: 'PL'},\n    {name: 'Portugal', code: 'PT'},\n    {name: 'Puerto Rico', code: 'PR'},\n    {name: 'Qatar', code: 'QA'},\n    {name: 'Reunion', code: 'RE'},\n    {name: 'Romania', code: 'RO'},\n    {name: 'Russian Federation', code: 'RU'},\n    {name: 'RWANDA', code: 'RW'},\n    {name: 'Saint Helena', code: 'SH'},\n    {name: 'Saint Kitts and Nevis', code: 'KN'},\n    {name: 'Saint Lucia', code: 'LC'},\n    {name: 'Saint Pierre and Miquelon', code: 'PM'},\n    {name: 'Saint Vincent and the Grenadines', code: 'VC'},\n    {name: 'Samoa', code: 'WS'},\n    {name: 'San Marino', code: 'SM'},\n    {name: 'Sao Tome and Principe', code: 'ST'},\n    {name: 'Saudi Arabia', code: 'SA'},\n    {name: 'Senegal', code: 'SN'},\n    {name: 'Serbia and Montenegro', code: 'CS'},\n    {name: 'Seychelles', code: 'SC'},\n    {name: 'Sierra Leone', code: 'SL'},\n    {name: 'Singapore', code: 'SG'},\n    {name: 'Slovakia', code: 'SK'},\n    {name: 'Slovenia', code: 'SI'},\n    {name: 'Solomon Islands', code: 'SB'},\n    {name: 'Somalia', code: 'SO'},\n    {name: 'South Africa', code: 'ZA'},\n    {name: 'South Georgia and the South Sandwich Islands', code: 'GS'},\n    {name: 'Spain', code: 'ES'},\n    {name: 'Sri Lanka', code: 'LK'},\n    {name: 'Sudan', code: 'SD'},\n    {name: 'Suriname', code: 'SR'},\n    {name: 'Svalbard and Jan Mayen', code: 'SJ'},\n    {name: 'Swaziland', code: 'SZ'},\n    {name: 'Sweden', code: 'SE'},\n    {name: 'Switzerland', code: 'CH'},\n    {name: 'Syrian Arab Republic', code: 'SY'},\n    {name: 'Taiwan, Province of China', code: 'TW'},\n    {name: 'Tajikistan', code: 'TJ'},\n    {name: 'Tanzania, United Republic of', code: 'TZ'},\n    {name: 'Thailand', code: 'TH'},\n    {name: 'Timor-Leste', code: 'TL'},\n    {name: 'Togo', code: 'TG'},\n    {name: 'Tokelau', code: 'TK'},\n    {name: 'Tonga', code: 'TO'},\n    {name: 'Trinidad and Tobago', code: 'TT'},\n    {name: 'Tunisia', code: 'TN'},\n    {name: 'Turkey', code: 'TR'},\n    {name: 'Turkmenistan', code: 'TM'},\n    {name: 'Turks and Caicos Islands', code: 'TC'},\n    {name: 'Tuvalu', code: 'TV'},\n    {name: 'Uganda', code: 'UG'},\n    {name: 'Ukraine', code: 'UA'},\n    {name: 'United Arab Emirates', code: 'AE'},\n    {name: 'United Kingdom', code: 'GB'},\n    {name: 'United States', code: 'US'},\n    {name: 'United States Minor Outlying Islands', code: 'UM'},\n    {name: 'Uruguay', code: 'UY'},\n    {name: 'Uzbekistan', code: 'UZ'},\n    {name: 'Vanuatu', code: 'VU'},\n    {name: 'Venezuela', code: 'VE'},\n    {name: 'Viet Nam', code: 'VN'},\n    {name: 'Virgin Islands, British', code: 'VG'},\n    {name: 'Virgin Islands, U.S.', code: 'VI'},\n    {name: 'Wallis and Futuna', code: 'WF'},\n    {name: 'Western Sahara', code: 'EH'},\n    {name: 'Yemen', code: 'YE'},\n    {name: 'Zambia', code: 'ZM'},\n    {name: 'Zimbabwe', code: 'ZW'}\n]\n","import {createAction, props} from '@ngrx/store';\nimport {LocationModel} from '../models/weather-conditions.model';\nimport {LocationState} from '../models/location-state.model';\n\nexport const initLocations = createAction(\n    '[Location] Init locations'\n);\n\nexport const setState = createAction(\n    '[Location] Set state',\n    props<LocationState>()\n);\n\nexport const setLocations = createAction(\n    '[Location] Set locations',\n    props<{ zipcodes: string[] }>()\n);\n\nexport const addLocation = createAction(\n    '[Location] Add location',\n    props<{ zipcode: string }>()\n);\n\nexport const locationFetched = createAction(\n    '[Location] Location fetched',\n    props<{ location: LocationModel }>()\n);\n\nexport const locationFetchingOver = createAction(\n    '[Location] Location fetching over',\n    props<{ zipcode: string }>()\n);\n\nexport const updateLocation = createAction(\n    '[Location] Update location',\n    props<{ location: LocationModel }>()\n);\n\nexport const removeLocation = createAction(\n    '[Location] Remove location',\n    props<{ zipcode: string }>()\n);\n\nexport const refreshLocations = createAction(\n    '[Location] Refresh locations'\n);\n","import {Actions, concatLatestFrom, createEffect, ofType, OnInitEffects} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {WeatherService} from '../weather.service';\nimport {catchError, filter, map, mergeMap, switchMap, takeUntil, tap} from 'rxjs/operators';\nimport {\n    addLocation,\n    initLocations,\n    locationFetched,\n    refreshLocations,\n    removeLocation,\n    setLocations,\n    setState,\n    updateLocation\n} from './location.actions';\nimport {EMPTY, merge, of} from 'rxjs';\nimport {locationsFeature} from './location.feature';\nimport {Injectable} from '@angular/core';\nimport {LocationService} from '../location.service';\n\n@Injectable()\nexport class LocationEffects implements OnInitEffects {\n\n    // When initializing the feature:\n    // 1) Load zipcodes from the localstorage and create ONE setLocations action\n    // 2) For each zip code create a locationFetched action.\n    initLocations$ = createEffect(() =>\n            this.actions$.pipe(\n                ofType(initLocations.type),\n                mergeMap(\n                    () => {\n                        const zipcodes = this.locationService.extractFromLocalStorage();\n                        // Action to rehydrate locations field\n                        const setZipcodes = setLocations({zipcodes});\n                        // Action to rehydrate conditions field\n                        const fetchZipcodes = [...new Set(zipcodes)].map(\n                            zipcode => this.fetchCurrentConditions(zipcode)\n                        );\n                        // Merge all actions\n                        return merge(...[of(setZipcodes), ...fetchZipcodes]);\n                    }\n                )\n            ),\n        {useEffectsErrorHandler: false}\n    );\n\n    // When adding a location, save it to local storage before updating the state.\n    addLocation$ = createEffect(() =>\n            this.actions$.pipe(\n                ofType(addLocation.type),\n                concatLatestFrom(() => this.store.select(locationsFeature.selectLocations)),\n                map(\n                    ([{zipcode}, locations]) => [...locations, zipcode]\n                ),\n                tap(locations => this.locationService.persistInLocalStorage(locations)),\n                map(\n                    locations => setLocations({zipcodes: locations})\n                ),\n            ),\n        {useEffectsErrorHandler: false}\n    );\n\n    // When removing a location, save it to local storage before updating the state.\n    removeLocation$ = createEffect(() =>\n            this.actions$.pipe(\n                ofType(removeLocation.type),\n                concatLatestFrom(() => this.store.select(locationsFeature.selectLocationsState)),\n                map(\n                    ([{zipcode}, state]) => {\n                        return {\n                            ...state,\n                            locations: state.locations.filter(zip => zip !== zipcode),\n                            locationModels: state.locationModels.filter(locationModel => locationModel.zip !== zipcode),\n                        };\n                    }\n                ),\n                tap(({locations}) => this.locationService.persistInLocalStorage(locations)),\n                map(newState => setState(newState))\n            ),\n        {useEffectsErrorHandler: false}\n    );\n\n    // When receiving a refresh state instruction, fetch all\n    refreshLocations$ = createEffect(() =>\n            this.actions$.pipe(\n                ofType(refreshLocations.type),\n                concatLatestFrom(() => this.store.select(locationsFeature.selectLocations)),\n                switchMap(([_, locations]) => merge(...[...new Set(locations)].map(\n                            zipcode => this.weatherService.getCurrentConditions(zipcode)\n                                .pipe(\n                                    map(data => updateLocation({\n                                        location: {\n                                            zip: zipcode,\n                                            data,\n                                            imageUrl: this.weatherService.getWeatherIcon(data.weather[0].id)\n                                        }\n                                    })),\n                                    catchError(() => {\n                                        console.error(`An error occurred while trying to load weather conditions for zipcode <${zipcode}>`);\n                                        return EMPTY\n                                    }),\n                                    takeUntil(\n                                        this.actions$.pipe(\n                                            ofType(removeLocation.type),\n                                            filter(({zip}) => zip === zipcode)\n                                        )\n                                    )\n                                )\n                        )\n                    )\n                )\n            ),\n        {useEffectsErrorHandler: false}\n    );\n\n    constructor(\n        private actions$: Actions,\n        private store: Store,\n        private weatherService: WeatherService,\n        private locationService: LocationService,\n    ) {\n    }\n\n    ngrxOnInitEffects(): Action {\n        return initLocations();\n    }\n\n    private fetchCurrentConditions(zipcode: string) {\n        return this.weatherService.getCurrentConditions(zipcode)\n            .pipe(\n                map(data => locationFetched({\n                    location: {\n                        zip: zipcode,\n                        data,\n                        imageUrl: this.weatherService.getWeatherIcon(data.weather[0].id)\n                    }\n                })),\n                catchError(() => {\n                    console.error(`An error occurred while trying to load weather conditions for zipcode <${zipcode}>`);\n                    return EMPTY\n                }),\n                takeUntil(\n                    this.actions$.pipe(\n                        ofType(removeLocation.type),\n                        filter(({zip}) => zip === zipcode)\n                    )\n                )\n            );\n    }\n}\n","import {locationsReducer} from './location.reducer';\nimport {createFeature} from '@ngrx/store';\n\nexport const locationsFeature = createFeature({\n    name: 'locations',\n    reducer: locationsReducer,\n});\n","import {LocationState} from '../models/location-state.model';\nimport {locationFetched, setLocations, setState, updateLocation} from './location.actions';\nimport {createReducer, on} from '@ngrx/store';\nimport {LocationModel} from '../models/weather-conditions.model';\n\nconst initialState: LocationState = {\n    locations: [] as string[],\n    locationModels: [] as LocationModel[]\n}\n\nexport const locationsReducer = createReducer(\n    initialState,\n    on(setState, (_, newState) => {\n        return newState;\n    }),\n    on(setLocations, (state, {zipcodes}) => {\n        return {...state, locations: zipcodes};\n    }),\n    on(locationFetched, (state, {location}) => {\n        return {...state, locationModels: [...state.locationModels, location]};\n    }),\n    on(updateLocation, (state, {location}) => {\n        return {\n            ...state,\n            locationModels: state.locationModels.map(\n                l => l.zip === location.zip ? location : l\n            ),\n        };\n    })\n);\n","import {Inject, Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {LocationModel, WeatherConditionsModel} from './models/weather-conditions.model';\nimport {ICON_BASE_URL} from '../shared/tokens/icon.token';\nimport {ForecastModel} from './models/forecast.model';\n\n@Injectable({providedIn: 'root'})\nexport class WeatherService {\n\n    private currentConditions: LocationModel[] = [];\n\n    constructor(private http: HttpClient, @Inject(ICON_BASE_URL) private iconBaseUrl: string) {\n    }\n\n    getCurrentConditions(zipcode: string): Observable<WeatherConditionsModel> {\n        // Here we make a request to get the current conditions data from the API.\n        const params = (new HttpParams())\n            .set('zip', zipcode)\n            .set('units', 'imperial');\n\n        return this.http.get<WeatherConditionsModel>('weather', {params});\n    }\n\n    removeCurrentConditions(zipcode: string) {\n        for (const i in this.currentConditions) {\n            if (this.currentConditions[i].zip === zipcode) {\n                this.currentConditions.splice(+i, 1);\n            }\n        }\n    }\n\n    getForecast(zipcode: string): Observable<ForecastModel> {\n        // Here we make a request to get the forecast data from the API.\n        const params = (new HttpParams())\n            .set('zip', zipcode)\n            .set('units', 'imperial');\n        return this.http.get<ForecastModel>('/forecast/daily', {params});\n    }\n\n    getWeatherIcon(id): string {\n        let icon: string;\n        if (id >= 200 && id <= 232) {\n            icon = 'art_storm.png';\n        } else if (id >= 501 && id <= 511) {\n            icon = 'art_rain.png';\n        } else if (id === 500 || (id >= 520 && id <= 531)) {\n            icon = 'art_light_rain.png';\n        } else if (id >= 600 && id <= 622) {\n            icon = 'art_snow.png';\n        } else if (id >= 801 && id <= 804) {\n            icon = 'art_clouds.png';\n        } else if (id === 741 || id === 761) {\n            icon = 'art_fog.png';\n        } else {\n            icon = 'art_clear.png';\n        }\n        return `${this.iconBaseUrl}${icon}`;\n    }\n\n}\n","import {Component} from '@angular/core';\nimport {EMPTY, Observable} from 'rxjs';\nimport {catchError, map, startWith, switchMap, tap} from 'rxjs/operators';\nimport {AutocompleteOption, COUNTRIES} from '../models/countries.model';\nimport {Store} from '@ngrx/store';\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {WeatherService} from '../weather.service';\nimport {addLocation, locationFetched} from '../reducers/location.actions';\n\n@Component({\n    selector: 'app-zipcode-entry',\n    templateUrl: './zipcode-entry.component.html'\n})\nexport class ZipcodeEntryComponent {\n\n    obs$: Observable<Observable<unknown>> = EMPTY;\n\n    countries = COUNTRIES;\n\n    formGroup: FormGroup<{ zipcode: FormControl<string | null>; country: FormControl<AutocompleteOption | null> }>;\n\n    constructor(private store: Store, formBuilder: FormBuilder, private weatherService: WeatherService) {\n        this.formGroup = formBuilder.group(\n            {\n                zipcode: formBuilder.control<string>(''),\n                country: formBuilder.control<AutocompleteOption>(null)\n            }\n        );\n\n        this.obs$ = this.formGroup.valueChanges.pipe(\n            startWith(this.formGroup.value),\n            map(\n                ({zipcode, country}) => {\n                    return new Observable<string>(obs => {\n                        const loc = [zipcode, country?.code].filter(c => !!c).join(',');\n                        obs.next(loc);\n                        obs.complete();\n                    }).pipe(\n                        tap(loc => this.store.dispatch(addLocation({zipcode: loc}))),\n                        switchMap(\n                            loc => this.weatherService.getCurrentConditions(loc)\n                                .pipe(\n                                    map(data => locationFetched({\n                                        location: {\n                                            zip: zipcode,\n                                            data,\n                                            imageUrl: this.weatherService.getWeatherIcon(data.weather[0].id)\n                                        }\n                                    })),\n                                    catchError(() => {\n                                        console.error(`An error occurred while trying to load weather conditions for zipcode <${zipcode}>`);\n                                        return EMPTY\n                                    }),\n                                    tap(action => this.store.dispatch(action))\n                                )\n                        )\n                    );\n                }\n            )\n        );\n    }\n}\n","import {Component} from '@angular/core';\nimport {WeatherService} from '../core/weather.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {ForecastModel} from '../core/models/forecast.model';\nimport {switchMap} from 'rxjs/operators';\n\n@Component({\n    selector: 'app-forecasts-list',\n    templateUrl: './forecasts-list.component.html',\n    styleUrls: ['./forecasts-list.component.css']\n})\nexport class ForecastsListComponent {\n\n    forecast$: Observable<ForecastModel>;\n\n    constructor(private weatherService: WeatherService, route: ActivatedRoute) {\n        this.forecast$ = route.params\n            .pipe(\n                switchMap(\n                    ({zipcode}) => weatherService.getForecast(zipcode)\n                )\n            );\n    }\n\n    computeWeatherIcon(id: number): string {\n        return this.weatherService.getWeatherIcon(id);\n    }\n}\n","import {Component, ElementRef, HostListener, Input, ViewChild} from '@angular/core';\nimport {AutocompleteOption} from '../../core/models/countries.model';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR, ReactiveFormsModule} from '@angular/forms';\nimport {map, startWith, tap} from 'rxjs/operators';\nimport {EMPTY, Observable} from 'rxjs';\nimport {CommonModule} from '@angular/common';\nimport {HighlightMatchingTextPipe} from '../highlight-matching-text.pipe';\n\n@Component({\n    selector: 'app-autocomplete',\n    templateUrl: './autocomplete.component.html',\n    styleUrls: ['./autocomplete.component.css'],\n    standalone: true,\n    imports: [CommonModule, ReactiveFormsModule, HighlightMatchingTextPipe],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, multi: true, useExisting: AutocompleteComponent}\n    ]\n})\nexport class AutocompleteComponent implements ControlValueAccessor {\n\n    @ViewChild('inputRef', {static: true})\n    inputEltRef: ElementRef<HTMLInputElement>;\n\n    onChangeFn: any;\n\n    readonly formControl = new FormControl<string>('');\n\n    filteredOptions$: Observable<AutocompleteOption[]> = EMPTY;\n\n    private selected: AutocompleteOption = null;\n\n    showDropdown = false;\n\n    @HostListener('document:click', ['$event.target'])\n    click(target) {\n        if (this.element.nativeElement.contains(target)) {\n            if (this.inputEltRef.nativeElement.contains(target)) {\n                this.showDropdown = true;\n            }\n        } else {\n            this.showDropdown = false;\n        }\n    }\n\n    @Input()\n    set options(options: AutocompleteOption[]) {\n        this.filteredOptions$ = this.formControl.valueChanges.pipe(\n            startWith(this.formControl.value),\n            tap(value => {\n                if (this.selected && this.selected.name !== value) {\n                    this.selected = null;\n                    this.onChangeFn(null);\n                }\n            }),\n            map(value => {\n                return options.filter(opt => opt.name.toUpperCase().indexOf(value.toUpperCase()) > -1)\n            }),\n        )\n        ;\n    }\n\n    constructor(private element: ElementRef) {\n    }\n\n    writeValue(obj: AutocompleteOption): void {\n        this.selected = obj;\n        this.formControl.setValue(obj?.name ?? '');\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChangeFn = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        // Not implemented\n    }\n\n    setDisabledState?(isDisabled: boolean): void {\n        // Not implemented\n    }\n\n    selectOption(selected: AutocompleteOption) {\n        this.selected = selected;\n        this.formControl.setValue(selected.name);\n        this.onChangeFn(selected);\n        this.showDropdown = false;\n    }\n\n    trackByCode(_, {code}: AutocompleteOption): string {\n        return code;\n    }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n\nfunction highlight(match: string): string {\n    return match.length > 0 ? `<b>${match}</b>` : match;\n}\n\n@Pipe({\n    name: 'highlightMatchingText',\n    standalone: true\n})\nexport class HighlightMatchingTextPipe implements PipeTransform {\n\n    constructor(private sanitize: DomSanitizer) {\n    }\n\n    transform(value: string, match: string): unknown {\n        const html = value.replace(new RegExp(match, 'gi'), highlight)\n\n        return this.sanitize.bypassSecurityTrustHtml(html);\n    }\n\n}\n","import {Component, HostListener, Input, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {EMPTY, Observable, Subject} from 'rxjs';\nimport {ButtonStatus, toButtonStatus} from '../utils/button-status.util';\nimport {map} from 'rxjs/operators';\nimport {CommonModule} from '@angular/common';\n\n@Component({\n    selector: 'app-submit-button',\n    templateUrl: './submit-button.component.html',\n    styleUrls: ['./submit-button.component.css'],\n    standalone: true,\n    imports: [CommonModule]\n})\nexport class SubmitButtonComponent implements OnInit {\n\n    @ViewChild('defaultReadyRef', {static: true})\n    defaultReadyEltRef: TemplateRef<unknown>;\n\n    @ViewChild('defaultDoneRef', {static: true})\n    defaultDoneEltRef: TemplateRef<unknown>;\n\n    @ViewChild('defaultPendingRef', {static: true})\n    defaultPendingEltRef: TemplateRef<unknown>;\n\n    private _readyTplEltRef: TemplateRef<unknown>;\n    private _doneTplEltRef: TemplateRef<unknown>;\n    private _pendingTplEltRef: TemplateRef<unknown>;\n\n    submit$ = new Subject<string>();\n\n    buttonStatus$: Observable<TemplateRef<unknown>> = EMPTY;\n\n    get readyTplEltRef() {\n        return this._readyTplEltRef;\n    }\n\n    @Input()\n    set readyTplEltRef(value: TemplateRef<unknown>) {\n        this._readyTplEltRef = value;\n    }\n\n    get doneTplEltRef() {\n        return this._doneTplEltRef;\n    }\n\n    @Input()\n    set doneTplEltRef(value: TemplateRef<unknown>) {\n        this._doneTplEltRef = value;\n    }\n\n    get pendingTplEltRef() {\n        return this._pendingTplEltRef;\n    }\n\n    @Input()\n    set pendingTplEltRef(value: TemplateRef<unknown>) {\n        this._pendingTplEltRef = value;\n    }\n\n    @Input()\n    set source(source$: Observable<unknown>) {\n        this.buttonStatus$ = this.submit$.asObservable().pipe(\n            toButtonStatus(source$),\n            map(buttonStatus => {\n                switch (buttonStatus) {\n                    case ButtonStatus.PENDING:\n                        return this.pendingTplEltRef;\n                    case ButtonStatus.DONE:\n                        return this.doneTplEltRef;\n                    default:\n                        return this.readyTplEltRef;\n                }\n            })\n        );\n    }\n\n    @HostListener('click')\n    click() {\n        this.submit$.next()\n    }\n\n    ngOnInit(): void {\n        if (!this.readyTplEltRef) {\n            this.readyTplEltRef = this.defaultReadyEltRef;\n        }\n        if (!this.doneTplEltRef) {\n            this.doneTplEltRef = this.defaultDoneEltRef;\n        }\n        if (!this.pendingTplEltRef) {\n            this.pendingTplEltRef = this.defaultPendingEltRef;\n        }\n    }\n\n\n}\n","import {InjectionToken} from '@angular/core';\n\nexport const ICON_BASE_URL = new InjectionToken<string>('ICON_BASE_URL');\n","import {InjectionToken} from '@angular/core';\n\nexport const OPEN_WEATHER_MAP_BASE_URL = new InjectionToken<string>('OPEN_WEATHER_MAP_BASE_URL');\nexport const OPEN_WEATHER_MAP_APPID_KEY = new InjectionToken<string>('OPEN_WEATHER_MAP_APPID_KEY');\nexport const OPEN_WEATHER_MAP_APPID_VALUE = new InjectionToken<string>('OPEN_WEATHER_MAP_APPID_VALUE');\n","import {catchError, defaultIfEmpty, mapTo, startWith, switchMap, takeLast} from 'rxjs/operators';\nimport {merge, Observable, of, OperatorFunction, timer} from 'rxjs';\n\nexport const enum ButtonStatus {\n    READY = 'READY',\n    PENDING = 'PENDING',\n    DONE = 'DONE'\n}\n\nexport function toButtonStatus(input$: Observable<unknown>): OperatorFunction<unknown, ButtonStatus> {\n    return source$ => source$.pipe(\n        switchMap(\n            () => input$.pipe(\n                // Pick last value just to make sure we wait for source completion.\n                takeLast(1),\n                // Returning null is intentional to pass through switchMap.\n                catchError(() => of(null)),\n                switchMap(() => {\n                    const done$ = of(ButtonStatus.DONE);\n                    const pending$ = timer(500).pipe(mapTo(ButtonStatus.READY));\n                    return merge(done$, pending$);\n                }),\n                // If no value is sent, just return READY\n                defaultIfEmpty(ButtonStatus.READY),\n                // First value sent is READY\n                startWith(ButtonStatus.PENDING)\n            )\n        ),\n        startWith(ButtonStatus.READY)\n    );\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n    production: false,\n    openWeatherMap: {\n        baseUrl: 'https://api.openweathermap.org/data/2.5',\n        appIdKey: 'APPID',\n        appIdValue: '5a4b2d457ecbef9eb2a71e480b947604',\n    },\n    iconUrl: 'https://raw.githubusercontent.com/udacity/Sunshine-Version-2/sunshine_master/app/src/main/res/drawable-hdpi/'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}